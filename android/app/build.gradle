plugins {
    id "com.android.application"
    id "kotlin-android" // Update Kotlin version here
    id "dev.flutter.flutter-gradle-plugin"
}

def localProperties = new Properties()
def localPropertiesFile = rootProject.file('local.properties')
if (localPropertiesFile.exists()) {
    localPropertiesFile.withReader('UTF-8') { reader ->
        localProperties.load(reader)
    }
}

def keystoreProperties = new Properties()
def keystorePropertiesFile = rootProject.file('key.properties')
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

def flutterVersionCode = localProperties.getProperty('flutter.versionCode')
if (flutterVersionCode == null) {
    flutterVersionCode = '1'
}

def flutterVersionName = localProperties.getProperty('flutter.versionName')
if (flutterVersionName == null) {
    flutterVersionName = '1.0'
}

android {
    namespace "com.emerald.emerald_mining" // Updated package namespace
    compileSdk 34
    ndkVersion flutter.ndkVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "com.example.emerald_mining" // Use your actual application ID huwawei: com.example.emerald_mining google play: "com.emerald.emerald_mining"
        minSdkVersion 23 // Consider lowering minSdkVersion for wider compatibility
        targetSdkVersion 34
        versionCode flutterVersionCode.toInteger()
        versionName flutterVersionName
        multiDexEnabled true // Enable multidex if needed
    }

    signingConfigs {
        release {
            keyAlias = keystoreProperties['keyAlias']
            keyPassword = keystoreProperties['keyPassword']
            storeFile = keystoreProperties['storeFile'] ? file(keystoreProperties['storeFile']) : null
            storePassword = keystoreProperties['storePassword']
        }
    }
    
    buildTypes {
        release {
             
            signingConfig = signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}

flutter {
    source '../..'
}

dependencies {
    
    implementation 'androidx.multidex:multidex:2.0.1' // Added multidex dependency
   // This dependency is downloaded from the Googleâ€™s Maven repository.
        // Make sure you also include that repository in your project's build.gradle file.
        implementation("com.google.android.play:app-update:2.1.0")
    
        // For Kotlin users, also import the Kotlin extensions library for Play In-App Update:
        implementation("com.google.android.play:app-update-ktx:2.1.0")
}
